"use strict";(self.webpackChunkmy_demo=self.webpackChunkmy_demo||[]).push([[1338],{3442:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"MCUT Training/renesas/yocto-proj","title":"2-3 Yocto Project Build","description":"Start and enter a container,","source":"@site/docs/MCUT Training/renesas/yocto-proj.md","sourceDirName":"MCUT Training/renesas","slug":"/MCUT Training/renesas/yocto-proj","permalink":"/brandon/docs/MCUT Training/renesas/yocto-proj","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/MCUT Training/renesas/yocto-proj.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"2-3 Yocto Project Build"},"sidebar":"tutorialSidebar","previous":{"title":"2-2 Renesas RZ/G2L","permalink":"/brandon/docs/MCUT Training/renesas/"},"next":{"title":"GStreamer","permalink":"/brandon/docs/category/gstreamer"}}');var s=n(4848),a=n(8453);const r={sidebar_position:3,title:"2-3 Yocto Project Build"},i="Yocto Project Build",c={},d=[];function l(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"yocto-project-build",children:"Yocto Project Build"})}),"\n",(0,s.jsx)(t.p,{children:"Start and enter a container,"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"docker start my_container_for_20.04\ndocker exec -it my_container_for_20.04 /bin/bash\n"})}),"\n",(0,s.jsxs)(t.p,{children:["According to the ",(0,s.jsx)(t.a,{href:"http://140.112.12.82/docu-moil-renesas/assets/files/LinuxStartUpGuide-v3.0.6-a054b3a83140c44a03d92433b163ee18.pdf",children:"Linux Startup Guide"}),", additional packages need to be installed inside the Docker container by using the command below:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ sudo apt-get update\n$ sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib \\\nbuild-essential chrpath socat cpio python python3 python3-pip python3-pexpect \\\nxz-utils debianutils iputils-ping libsdl1.2-dev xterm p7zip-full libyaml-dev \\\nlibssl-dev bmap-tools\n"})}),"\n",(0,s.jsx)(t.p,{children:"Install additional packages such as Cmake and Meson that may be used later:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sudo apt update\nsudo apt install software-properties-common\n\nsudo apt-add-reporitory 'deb https://apt.kitware.com/ubuntu/ bionic main'\nsudo apt update\nsudo apt install cmake\n\nsudo apt install meson ninja-build\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Please follow the ",(0,s.jsx)(t.strong,{children:"previous tutorial"})," to prepare the Renesas RZ/G2L board for Yocto build step by step."]}),"\n",(0,s.jsxs)(t.p,{children:["Please note that ",(0,s.jsx)(t.strong,{children:"each time"}),", we enter the container, it's necessary to run the code below to set the environment variables."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"cd <work dir> \nTEMPLATECONF=$PWD/meta-renesas/meta-rzg2l/docs/template/conf/ source poky/oe-init-build-env build\n"})}),"\n",(0,s.jsx)(t.p,{children:"There are some choices for the build option, it's recommended to use the most complete build option as below to start the Yocto build."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"MACHINE=smarc-rzg2l bitbake core-image-qt\n"})}),"\n",(0,s.jsx)(t.p,{children:"After finishing the Yocto Build, check the output directory as shown below:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"cd build/tmp/deploy/images/smarc-rag2l/\n"})}),"\n",(0,s.jsx)(t.p,{children:"The output of the build are"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"core-image-qt-smarc-rzg2l.wic.gz\ncore-image-qt-smarc-rzg2l.wic.bmap\n"})}),"\n",(0,s.jsx)(t.p,{children:"Exit from the Docker container and copy the output file into the SD card using the command below:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sudo bmaptool copy core-image-qt-smarc-rzg2l.wic.gz /dev/sda\n"})}),"\n",(0,s.jsx)(t.p,{children:"After that, remove the SD card, insert it to RZ/G2L and boot up. Now you can click on the Qt Demo items or open the terminal then input some Linux commands for test."})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var o=n(6540);const s={},a=o.createContext(s);function r(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);